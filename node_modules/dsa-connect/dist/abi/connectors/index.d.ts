export * as connectorsV1 from './v1';
export * as connectorsV2_M1 from './v2';
import * as connectorsV1 from './v1';
import { connectorsV2_M1 } from './v2';
export declare type Connector = keyof typeof connectorsV1 | keyof typeof connectorsV2_M1;
export declare const connectors: {
    versions: {
        1: typeof connectorsV1;
        2: {
            'MORPHO-REWARDS-A': import("web3-utils").AbiItem[];
            'LITE-B': import("web3-utils").AbiItem[];
            'MORPHO-AAVE-V2-A': import("web3-utils").AbiItem[];
            'MORPHO-AAVE-V3-A': import("web3-utils").AbiItem[];
            'MORPHO-COMPOUND-V2-A': import("web3-utils").AbiItem[];
            'COMPOUND-V3-REWARDS-A': import("web3-utils").AbiItem[];
            'COMPOUND-V3-A': import("web3-utils").AbiItem[];
            'AAVE-V2-AUTOMATION-A': import("web3-utils").AbiItem[];
            'AAVE-V2-AUTOMATION-STAGING-A': import("web3-utils").AbiItem[];
            'EULER-A': import("web3-utils").AbiItem[];
            'EULER-IMPORT-A': import("web3-utils").AbiItem[];
            'EULER-REWARDS-A': import("web3-utils").AbiItem[];
            'AAVE-V3-AUTOMATION-STAGING-A': import("web3-utils").AbiItem[];
            'AAVE-V3-AUTOMATION-A': import("web3-utils").AbiItem[];
            'SOCKET-A': import("web3-utils").AbiItem[];
            'DSA-SPELL-A': import("web3-utils").AbiItem[];
            'INSTA-DEX-SIMULATION-A': import("web3-utils").AbiItem[];
            'SWAP-AGGREGATOR-A': import("web3-utils").AbiItem[];
            'UNISWAP-V3-SWAP-A': import("web3-utils").AbiItem[];
            'HOP-MAINNET-A': import("web3-utils").AbiItem[];
            'NOTIONAL-V2-A': import("web3-utils").AbiItem[];
            'AAVE-V3-CLAIM-A': import("web3-utils").AbiItem[];
            'HOP-A': import("web3-utils").AbiItem[];
            'AAVE-V3-IMPORT-PERMIT-A': import("web3-utils").AbiItem[];
            'LITE-A': import("web3-utils").AbiItem[];
            'COMPOUND-IMPORT-D': import("web3-utils").AbiItem[];
            'AAVE-V3-IMPORT-A': import("web3-utils").AbiItem[];
            'AAVE-IMPORT-V2-V3-A': import("web3-utils").AbiItem[];
            'AAVE-V3-A': import("web3-utils").AbiItem[];
            'WFTM-A': import("web3-utils").AbiItem[];
            'MSTABLE-A': import("web3-utils").AbiItem[];
            'LIDO-STETH-A': import("web3-utils").AbiItem[];
            'PANGOLIN-STAKE-A': import("web3-utils").AbiItem[];
            'PANGOLIN-A': import("web3-utils").AbiItem[];
            'UNISWAP-V3-STAKER-B': import("web3-utils").AbiItem[];
            'UNISWAP-V3-ROUTER-A': import("web3-utils").AbiItem[];
            'SUSHISWAP-A': import("web3-utils").AbiItem[];
            'ZEROX-V4-A': import("web3-utils").AbiItem[];
            'ZEROX-A': import("web3-utils").AbiItem[];
            'PARASWAP-V5-A': import("web3-utils").AbiItem[];
            '1INCH-A': import("web3-utils").AbiItem[];
            '1INCH-B': import("web3-utils").AbiItem[];
            '1INCH-V3-A': import("web3-utils").AbiItem[];
            '1INCH-V4-A': import("web3-utils").AbiItem[];
            '1INCH-V5-A': import("web3-utils").AbiItem[];
            'QUICKSWAP-A': import("web3-utils").AbiItem[];
            'INSTAPOOL-C': import("web3-utils").AbiItem[];
            'UNISWAP-SELL-BETA': import("web3-utils").AbiItem[];
            'AAVE-V2-IMPORT-C': import("web3-utils").AbiItem[];
            'COMPOUND-IMPORT-C': import("web3-utils").AbiItem[];
            'QI-A': import("web3-utils").AbiItem[];
            'BENQI-A': import("web3-utils").AbiItem[];
            'INSTAPOOL-B': import("web3-utils").AbiItem[];
            'POOLTOGETHER-A': import("web3-utils").AbiItem[];
            'GELATO-AAVE-A': import("web3-utils").AbiItem[];
            'INST-STAKING-B': import("web3-utils").AbiItem[];
            'YEARN-VAULT-A': import("web3-utils").AbiItem[];
            'UNISWAP-V3-STAKE-A': import("web3-utils").AbiItem[];
            'BASIC-C': import("web3-utils").AbiItem[];
            'BASIC-B': import("web3-utils").AbiItem[];
            'B-LIQUITY-A': import("web3-utils").AbiItem[];
            'B-MAKERDAO-A': import("web3-utils").AbiItem[];
            'B-COMPOUND-A': import("web3-utils").AbiItem[];
            'UNISWAP-V3-A': import("web3-utils").AbiItem[];
            'REFLEXER-A': import("web3-utils").AbiItem[];
            'LIQUITY-A': import("web3-utils").AbiItem[];
            'UNISWAP-V2-A': import("web3-utils").AbiItem[];
            'INST-LM-A': import("web3-utils").AbiItem[];
            'REFINANCE-A': import("web3-utils").AbiItem[];
            'INST-A': import("web3-utils").AbiItem[];
            'WETH-A': import("web3-utils").AbiItem[];
            'WSTETH-A': import("web3-utils").AbiItem[];
            'INST-STAKING-A': import("web3-utils").AbiItem[];
            'STAKE-ERC20-A': import("web3-utils").AbiItem[];
            'G-UNISWAP-A': import("web3-utils").AbiItem[];
            'INSTAPOOL-A': import("web3-utils").AbiItem[];
            'COMPOUND-IMPORT-A': import("web3-utils").AbiItem[];
            'AAVE-V2-IMPORT-A': import("web3-utils").AbiItem[];
            'AAVE-V1-IMPORT-A': import("web3-utils").AbiItem[];
            'AAVE-CLAIM-A': import("web3-utils").AbiItem[];
            'AAVE-CLAIM-B': import("web3-utils").AbiItem[];
            'AAVE-V1-A': import("web3-utils").AbiItem[];
            'AAVE-V2-A': import("web3-utils").AbiItem[];
            'AUTHORITY-A': import("web3-utils").AbiItem[];
            'BASIC-A': import("web3-utils").AbiItem[];
            'COMP-A': import("web3-utils").AbiItem[];
            'COMPOUND-A': import("web3-utils").AbiItem[];
            'MAKERDAO-A': import("web3-utils").AbiItem[];
            'UNISWAP-A': import("web3-utils").AbiItem[];
            'POLYGON-BRIDGE-A': import("web3-utils").AbiItem[];
            'AAVE-STAKE-A': import("web3-utils").AbiItem[];
            'PARASWAP-A': import("web3-utils").AbiItem[];
            'COMPOUND-IMPORT-B': import("web3-utils").AbiItem[];
            'AAVE-V2-IMPORT-B': import("web3-utils").AbiItem[];
            'MAKERDAO-CLAIM-A': import("web3-utils").AbiItem[];
            'INTEROP-A': import("web3-utils").AbiItem[];
            'INTEROP-STAGING-A': import("web3-utils").AbiItem[];
            'WMATIC-A': import("web3-utils").AbiItem[];
            'WAVAX-A': import("web3-utils").AbiItem[];
            'UNIVERSE-A': import("web3-utils").AbiItem[];
            'UBIQUITY-A': import("web3-utils").AbiItem[];
            'AVO-APPROVE-A': import("web3-utils").AbiItem[];
            'AVO-APPROVE-STAGING-A': import("web3-utils").AbiItem[];
            'AVO-MAKER-A': import("web3-utils").AbiItem[];
            'AVO-MAKER-STAGING-A': import("web3-utils").AbiItem[];
            'ARB-CLAIM-A': import("web3-utils").AbiItem[];
            'CONNEXT-A': import("web3-utils").AbiItem[];
            'SPARK-A': import("web3-utils").AbiItem[];
            'KYBER-AGGREGATOR-A': import("web3-utils").AbiItem[];
        };
    };
};
